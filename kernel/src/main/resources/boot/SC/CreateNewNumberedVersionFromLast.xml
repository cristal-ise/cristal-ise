<?xml version="1.0" encoding="UTF-8"?>
<!--

    This file is part of the CRISTAL-iSE kernel.
    Copyright (c) 2001-2015 The CRISTAL Consortium. All rights reserved.

    This library is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as published
    by the Free Software Foundation; either version 3 of the License, or (at
    your option) any later version.

    This library is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; with out even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
    License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this library; if not, write to the Free Software Foundation,
    Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.

    http://www.fsf.org/licensing/licenses/lgpl.html

-->
<cristalscript>
    <param name="item" type="org.cristalise.kernel.entity.proxy.ItemProxy" />
    <param name="agent" type="org.cristalise.kernel.entity.proxy.AgentProxy" />
    <param name="job" type="org.cristalise.kernel.entity.Job" />
    <output name="errors" type="org.cristalise.kernel.scripting.ErrorInfo" />
    <script language="javascript" name="CreateNewNumberedVersionFromLast"><![CDATA[
var viewName = job.getActPropString("ViewName");

if (viewName.equals("")) throw "ViewName not specified. Cannot create new version.";

var lastView = -1;
var existingViews = item.getContents("/ViewPoint/"+viewName);

for (i=0; i<existingViews.length; i++) {
    var thisView = parseInt(existingViews[i]);

    if (thisView != NaN && lastView < thisView) lastView = thisView;
}
lastView++;

updateDependenciesVersion(lastView);
updateViewpoint(viewName, lastView)

//Reads all Dependencies of this Description Item and updates their version
function updateDependenciesVersion(lastView) {
    var collectionNames = item.getContents("/Collection");

    for (i = 0; i < collectionNames.length; i++) {
        //TODO: check if the collection is a Dependency
        var params = new Array(2);
        params[0] = collectionNames[i];
        params[1] = lastView;
        agent.execute(item, "CreateNewCollectionVersion", params);
    }
}

function updateViewpoint(viewName, lastView) {
    var existingLast = item.getViewpoint(viewName, "last");
    
    var params = new Array(3);
    params[0] = viewName;
    params[1] = lastView;
    params[2] = existingLast.getEventId();
    
    agent.execute(item, "WriteViewpoint", params);

}
    ]]></script>
</cristalscript>
